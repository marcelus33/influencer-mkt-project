# Generated by Django 5.0.7 on 2024-07-21 00:20

import json
from django.db import migrations, transaction

from utils.choices import PlatformChoices


def load_data_from_json(apps, schema_editor):
    Creator = apps.get_model('creator', 'Creator')
    Content = apps.get_model('content', 'Content')
    json_file_path = 'creators.json'

    with open(json_file_path, 'r') as file:
        data = json.load(file)

    platform_mapping = {
        'Instagram': PlatformChoices.INSTAGRAM,
        'TikTok': PlatformChoices.TIKTOK,
        'User Generated Content': PlatformChoices.UGC,
    }

    with transaction.atomic():
        try:
            for item in data:
                platform_value = platform_mapping.get(item['platform'])
                if platform_value is None:
                    raise ValueError(f"Invalid platform: {item['platform']}")
                # The JSON file appeared to have no duplicates, but this check ensures it.
                creator, _ = Creator.objects.get_or_create(
                    username=item['username'],
                    defaults={
                        'name': item['name'],
                        'platform': platform_value,
                        'rating': item['rating']
                    }
                )
                #
                Content.objects.get_or_create(
                    creator=creator,
                    url=item['content']
                )
        except Exception as e:
            print(f"Error processing entry for {item['username']}: {e}")
            raise


class Migration(migrations.Migration):
    dependencies = [
        ('creator', '0001_initial'),
        ('content', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_data_from_json),
    ]
